{
	"id": "6254eb1d9e045666fd31acca1b4d22d3",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.14",
	"solcLongVersion": "0.8.14+commit.80d49f37",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/CheckEncode.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\ncontract CheckEncode {\n\n\n  function checkEncodeMakerAsset(bytes memory data) public returns (address, uint256){\n    (address token, uint tokenId) = abi.decode(data, (address, uint));\n     return (token, tokenId);\n  }\n\n  function checkEncodeTakerAsset(bytes memory data) public pure returns(address) {\n    (address buyToken) = abi.decode(data, (address));\n    return buyToken;\n  }\n\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/CheckEncode.sol": {
				"CheckEncode": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "checkEncodeMakerAsset",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "checkEncodeTakerAsset",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/CheckEncode.sol\":57:439  contract CheckEncode {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/CheckEncode.sol\":57:439  contract CheckEncode {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x1f2aaa34\n      eq\n      tag_3\n      jumpi\n      dup1\n      0xa325bfb6\n      eq\n      tag_4\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/CheckEncode.sol\":277:436  function checkEncodeTakerAsset(bytes memory data) public pure returns(address) {... */\n    tag_3:\n      tag_5\n      tag_6\n      calldatasize\n      0x04\n      tag_7\n      jump\t// in\n    tag_6:\n      tag_8\n      jump\t// in\n    tag_5:\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":1236:1268   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":1218:1269   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1206:1208   */\n      0x20\n        /* \"#utility.yul\":1191:1209   */\n      add\n        /* \"contracts/CheckEncode.sol\":277:436  function checkEncodeTakerAsset(bytes memory data) public pure returns(address) {... */\n    tag_9:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/CheckEncode.sol\":84:273  function checkEncodeMakerAsset(bytes memory data) public returns (address, uint256){... */\n    tag_4:\n      tag_11\n      tag_12\n      calldatasize\n      0x04\n      tag_7\n      jump\t// in\n    tag_12:\n      tag_13\n      jump\t// in\n    tag_11:\n      0x40\n      dup1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":1472:1504   */\n      swap1\n      swap4\n      and\n        /* \"#utility.yul\":1454:1505   */\n      dup4\n      mstore\n        /* \"#utility.yul\":1536:1538   */\n      0x20\n        /* \"#utility.yul\":1521:1539   */\n      dup4\n      add\n        /* \"#utility.yul\":1514:1548   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"#utility.yul\":1427:1445   */\n      add\n        /* \"contracts/CheckEncode.sol\":84:273  function checkEncodeMakerAsset(bytes memory data) public returns (address, uint256){... */\n      tag_9\n        /* \"#utility.yul\":1280:1554   */\n      jump\n        /* \"contracts/CheckEncode.sol\":277:436  function checkEncodeTakerAsset(bytes memory data) public pure returns(address) {... */\n    tag_8:\n        /* \"contracts/CheckEncode.sol\":347:354  address */\n      0x00\n        /* \"contracts/CheckEncode.sol\":363:379  address buyToken */\n      dup1\n        /* \"contracts/CheckEncode.sol\":394:398  data */\n      dup3\n        /* \"contracts/CheckEncode.sol\":383:410  abi.decode(data, (address)) */\n      dup1\n      0x20\n      add\n      swap1\n      mload\n      dup2\n      add\n      swap1\n      tag_17\n      swap2\n      swap1\n      tag_18\n      jump\t// in\n    tag_17:\n        /* \"contracts/CheckEncode.sol\":362:410  (address buyToken) = abi.decode(data, (address)) */\n      swap4\n        /* \"contracts/CheckEncode.sol\":277:436  function checkEncodeTakerAsset(bytes memory data) public pure returns(address) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/CheckEncode.sol\":84:273  function checkEncodeMakerAsset(bytes memory data) public returns (address, uint256){... */\n    tag_13:\n        /* \"contracts/CheckEncode.sol\":150:157  address */\n      0x00\n        /* \"contracts/CheckEncode.sol\":159:166  uint256 */\n      dup1\n        /* \"contracts/CheckEncode.sol\":174:187  address token */\n      0x00\n        /* \"contracts/CheckEncode.sol\":189:201  uint tokenId */\n      dup1\n        /* \"contracts/CheckEncode.sol\":216:220  data */\n      dup5\n        /* \"contracts/CheckEncode.sol\":205:238  abi.decode(data, (address, uint)) */\n      dup1\n      0x20\n      add\n      swap1\n      mload\n      dup2\n      add\n      swap1\n      tag_20\n      swap2\n      swap1\n      tag_21\n      jump\t// in\n    tag_20:\n        /* \"contracts/CheckEncode.sol\":173:238  (address token, uint tokenId) = abi.decode(data, (address, uint)) */\n      swap1\n      swap7\n      swap1\n      swap6\n      pop\n        /* \"contracts/CheckEncode.sol\":84:273  function checkEncodeMakerAsset(bytes memory data) public returns (address, uint256){... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14:141   */\n    tag_22:\n        /* \"#utility.yul\":75:85   */\n      0x4e487b71\n        /* \"#utility.yul\":70:73   */\n      0xe0\n        /* \"#utility.yul\":66:86   */\n      shl\n        /* \"#utility.yul\":63:64   */\n      0x00\n        /* \"#utility.yul\":56:87   */\n      mstore\n        /* \"#utility.yul\":106:110   */\n      0x41\n        /* \"#utility.yul\":103:104   */\n      0x04\n        /* \"#utility.yul\":96:111   */\n      mstore\n        /* \"#utility.yul\":130:134   */\n      0x24\n        /* \"#utility.yul\":127:128   */\n      0x00\n        /* \"#utility.yul\":120:135   */\n      revert\n        /* \"#utility.yul\":146:1067   */\n    tag_7:\n        /* \"#utility.yul\":214:220   */\n      0x00\n        /* \"#utility.yul\":267:269   */\n      0x20\n        /* \"#utility.yul\":255:264   */\n      dup3\n        /* \"#utility.yul\":246:253   */\n      dup5\n        /* \"#utility.yul\":242:265   */\n      sub\n        /* \"#utility.yul\":238:270   */\n      slt\n        /* \"#utility.yul\":235:287   */\n      iszero\n      tag_27\n      jumpi\n        /* \"#utility.yul\":283:284   */\n      0x00\n        /* \"#utility.yul\":280:281   */\n      dup1\n        /* \"#utility.yul\":273:285   */\n      revert\n        /* \"#utility.yul\":235:287   */\n    tag_27:\n        /* \"#utility.yul\":323:332   */\n      dup2\n        /* \"#utility.yul\":310:333   */\n      calldataload\n        /* \"#utility.yul\":352:370   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":393:395   */\n      dup1\n        /* \"#utility.yul\":385:391   */\n      dup3\n        /* \"#utility.yul\":382:396   */\n      gt\n        /* \"#utility.yul\":379:413   */\n      iszero\n      tag_28\n      jumpi\n        /* \"#utility.yul\":409:410   */\n      0x00\n        /* \"#utility.yul\":406:407   */\n      dup1\n        /* \"#utility.yul\":399:411   */\n      revert\n        /* \"#utility.yul\":379:413   */\n    tag_28:\n        /* \"#utility.yul\":447:453   */\n      dup2\n        /* \"#utility.yul\":436:445   */\n      dup5\n        /* \"#utility.yul\":432:454   */\n      add\n        /* \"#utility.yul\":422:454   */\n      swap2\n      pop\n        /* \"#utility.yul\":492:499   */\n      dup5\n        /* \"#utility.yul\":485:489   */\n      0x1f\n        /* \"#utility.yul\":481:483   */\n      dup4\n        /* \"#utility.yul\":477:490   */\n      add\n        /* \"#utility.yul\":473:500   */\n      slt\n        /* \"#utility.yul\":463:518   */\n      tag_29\n      jumpi\n        /* \"#utility.yul\":514:515   */\n      0x00\n        /* \"#utility.yul\":511:512   */\n      dup1\n        /* \"#utility.yul\":504:516   */\n      revert\n        /* \"#utility.yul\":463:518   */\n    tag_29:\n        /* \"#utility.yul\":550:552   */\n      dup2\n        /* \"#utility.yul\":537:553   */\n      calldataload\n        /* \"#utility.yul\":572:574   */\n      dup2\n        /* \"#utility.yul\":568:570   */\n      dup2\n        /* \"#utility.yul\":565:575   */\n      gt\n        /* \"#utility.yul\":562:598   */\n      iszero\n      tag_31\n      jumpi\n        /* \"#utility.yul\":578:596   */\n      tag_31\n      tag_22\n      jump\t// in\n    tag_31:\n        /* \"#utility.yul\":653:655   */\n      0x40\n        /* \"#utility.yul\":647:656   */\n      mload\n        /* \"#utility.yul\":621:623   */\n      0x1f\n        /* \"#utility.yul\":707:720   */\n      dup3\n      add\n      not(0x1f)\n        /* \"#utility.yul\":703:725   */\n      swap1\n      dup2\n      and\n        /* \"#utility.yul\":727:729   */\n      0x3f\n        /* \"#utility.yul\":699:730   */\n      add\n        /* \"#utility.yul\":695:735   */\n      and\n        /* \"#utility.yul\":683:736   */\n      dup2\n      add\n      swap1\n        /* \"#utility.yul\":751:769   */\n      dup4\n      dup3\n      gt\n        /* \"#utility.yul\":771:793   */\n      dup2\n      dup4\n      lt\n        /* \"#utility.yul\":748:794   */\n      or\n        /* \"#utility.yul\":745:817   */\n      iszero\n      tag_33\n      jumpi\n        /* \"#utility.yul\":797:815   */\n      tag_33\n      tag_22\n      jump\t// in\n    tag_33:\n        /* \"#utility.yul\":837:847   */\n      dup2\n        /* \"#utility.yul\":833:835   */\n      0x40\n        /* \"#utility.yul\":826:848   */\n      mstore\n        /* \"#utility.yul\":872:874   */\n      dup3\n        /* \"#utility.yul\":864:870   */\n      dup2\n        /* \"#utility.yul\":857:875   */\n      mstore\n        /* \"#utility.yul\":912:919   */\n      dup8\n        /* \"#utility.yul\":907:909   */\n      0x20\n        /* \"#utility.yul\":902:904   */\n      dup5\n        /* \"#utility.yul\":898:900   */\n      dup8\n        /* \"#utility.yul\":894:905   */\n      add\n        /* \"#utility.yul\":890:910   */\n      add\n        /* \"#utility.yul\":887:920   */\n      gt\n        /* \"#utility.yul\":884:937   */\n      iszero\n      tag_34\n      jumpi\n        /* \"#utility.yul\":933:934   */\n      0x00\n        /* \"#utility.yul\":930:931   */\n      dup1\n        /* \"#utility.yul\":923:935   */\n      revert\n        /* \"#utility.yul\":884:937   */\n    tag_34:\n        /* \"#utility.yul\":989:991   */\n      dup3\n        /* \"#utility.yul\":984:986   */\n      0x20\n        /* \"#utility.yul\":980:982   */\n      dup7\n        /* \"#utility.yul\":976:987   */\n      add\n        /* \"#utility.yul\":971:973   */\n      0x20\n        /* \"#utility.yul\":963:969   */\n      dup4\n        /* \"#utility.yul\":959:974   */\n      add\n        /* \"#utility.yul\":946:992   */\n      calldatacopy\n        /* \"#utility.yul\":1034:1035   */\n      0x00\n        /* \"#utility.yul\":1012:1027   */\n      swap3\n      dup2\n      add\n        /* \"#utility.yul\":1029:1031   */\n      0x20\n        /* \"#utility.yul\":1008:1032   */\n      add\n        /* \"#utility.yul\":1001:1036   */\n      swap3\n      swap1\n      swap3\n      mstore\n      pop\n        /* \"#utility.yul\":1016:1022   */\n      swap6\n        /* \"#utility.yul\":146:1067   */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1559:1744   */\n    tag_23:\n        /* \"#utility.yul\":1646:1659   */\n      dup1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":1688:1719   */\n      dup2\n      and\n        /* \"#utility.yul\":1678:1720   */\n      dup2\n      eq\n        /* \"#utility.yul\":1668:1738   */\n      tag_38\n      jumpi\n        /* \"#utility.yul\":1734:1735   */\n      0x00\n        /* \"#utility.yul\":1731:1732   */\n      dup1\n        /* \"#utility.yul\":1724:1736   */\n      revert\n        /* \"#utility.yul\":1668:1738   */\n    tag_38:\n        /* \"#utility.yul\":1559:1744   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1749:1973   */\n    tag_18:\n        /* \"#utility.yul\":1827:1833   */\n      0x00\n        /* \"#utility.yul\":1880:1882   */\n      0x20\n        /* \"#utility.yul\":1868:1877   */\n      dup3\n        /* \"#utility.yul\":1859:1866   */\n      dup5\n        /* \"#utility.yul\":1855:1878   */\n      sub\n        /* \"#utility.yul\":1851:1883   */\n      slt\n        /* \"#utility.yul\":1848:1900   */\n      iszero\n      tag_40\n      jumpi\n        /* \"#utility.yul\":1896:1897   */\n      0x00\n        /* \"#utility.yul\":1893:1894   */\n      dup1\n        /* \"#utility.yul\":1886:1898   */\n      revert\n        /* \"#utility.yul\":1848:1900   */\n    tag_40:\n        /* \"#utility.yul\":1919:1967   */\n      tag_17\n        /* \"#utility.yul\":1957:1966   */\n      dup3\n        /* \"#utility.yul\":1919:1967   */\n      tag_23\n      jump\t// in\n        /* \"#utility.yul\":1978:2263   */\n    tag_21:\n        /* \"#utility.yul\":2065:2071   */\n      0x00\n        /* \"#utility.yul\":2073:2079   */\n      dup1\n        /* \"#utility.yul\":2126:2128   */\n      0x40\n        /* \"#utility.yul\":2114:2123   */\n      dup4\n        /* \"#utility.yul\":2105:2112   */\n      dup6\n        /* \"#utility.yul\":2101:2124   */\n      sub\n        /* \"#utility.yul\":2097:2129   */\n      slt\n        /* \"#utility.yul\":2094:2146   */\n      iszero\n      tag_43\n      jumpi\n        /* \"#utility.yul\":2142:2143   */\n      0x00\n        /* \"#utility.yul\":2139:2140   */\n      dup1\n        /* \"#utility.yul\":2132:2144   */\n      revert\n        /* \"#utility.yul\":2094:2146   */\n    tag_43:\n        /* \"#utility.yul\":2165:2213   */\n      tag_44\n        /* \"#utility.yul\":2203:2212   */\n      dup4\n        /* \"#utility.yul\":2165:2213   */\n      tag_23\n      jump\t// in\n    tag_44:\n        /* \"#utility.yul\":2155:2213   */\n      swap2\n      pop\n        /* \"#utility.yul\":2253:2255   */\n      0x20\n        /* \"#utility.yul\":2242:2251   */\n      dup4\n        /* \"#utility.yul\":2238:2256   */\n      add\n        /* \"#utility.yul\":2232:2257   */\n      mload\n        /* \"#utility.yul\":2222:2257   */\n      swap1\n      pop\n        /* \"#utility.yul\":1978:2263   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220be59c589c00d14611ad4a26696fe27d9b79e2f5d1ea8b8fd0ae1e746c04f0dd964736f6c634300080e0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50610241806100206000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c80631f2aaa341461003b578063a325bfb61461006b575b600080fd5b61004e6100493660046100f7565b61009d565b6040516001600160a01b0390911681526020015b60405180910390f35b61007e6100793660046100f7565b6100bb565b604080516001600160a01b039093168352602083019190915201610062565b600080828060200190518101906100b491906101c4565b9392505050565b600080600080848060200190518101906100d591906101df565b90969095509350505050565b634e487b7160e01b600052604160045260246000fd5b60006020828403121561010957600080fd5b813567ffffffffffffffff8082111561012157600080fd5b818401915084601f83011261013557600080fd5b813581811115610147576101476100e1565b604051601f8201601f19908116603f0116810190838211818310171561016f5761016f6100e1565b8160405282815287602084870101111561018857600080fd5b826020860160208301376000928101602001929092525095945050505050565b80516001600160a01b03811681146101bf57600080fd5b919050565b6000602082840312156101d657600080fd5b6100b4826101a8565b600080604083850312156101f257600080fd5b6101fb836101a8565b915060208301519050925092905056fea2646970667358221220be59c589c00d14611ad4a26696fe27d9b79e2f5d1ea8b8fd0ae1e746c04f0dd964736f6c634300080e0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x241 DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x36 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x1F2AAA34 EQ PUSH2 0x3B JUMPI DUP1 PUSH4 0xA325BFB6 EQ PUSH2 0x6B JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4E PUSH2 0x49 CALLDATASIZE PUSH1 0x4 PUSH2 0xF7 JUMP JUMPDEST PUSH2 0x9D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x7E PUSH2 0x79 CALLDATASIZE PUSH1 0x4 PUSH2 0xF7 JUMP JUMPDEST PUSH2 0xBB JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP4 AND DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE ADD PUSH2 0x62 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0xB4 SWAP2 SWAP1 PUSH2 0x1C4 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 DUP5 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0xD5 SWAP2 SWAP1 PUSH2 0x1DF JUMP JUMPDEST SWAP1 SWAP7 SWAP1 SWAP6 POP SWAP4 POP POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x109 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x121 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP5 ADD SWAP2 POP DUP5 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x135 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x147 JUMPI PUSH2 0x147 PUSH2 0xE1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP4 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x16F JUMPI PUSH2 0x16F PUSH2 0xE1 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP8 PUSH1 0x20 DUP5 DUP8 ADD ADD GT ISZERO PUSH2 0x188 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 SWAP3 DUP2 ADD PUSH1 0x20 ADD SWAP3 SWAP1 SWAP3 MSTORE POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1BF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1D6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB4 DUP3 PUSH2 0x1A8 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1F2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1FB DUP4 PUSH2 0x1A8 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD MLOAD SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBE MSIZE 0xC5 DUP10 0xC0 0xD EQ PUSH2 0x1AD4 LOG2 PUSH7 0x96FE27D9B79E2F 0x5D 0x1E 0xA8 0xB8 REVERT EXP 0xE1 0xE7 CHAINID 0xC0 0x4F 0xD 0xD9 PUSH5 0x736F6C6343 STOP ADDMOD 0xE STOP CALLER ",
							"sourceMap": "57:382:0:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@checkEncodeMakerAsset_29": {
									"entryPoint": 187,
									"id": 29,
									"parameterSlots": 1,
									"returnSlots": 2
								},
								"@checkEncodeTakerAsset_49": {
									"entryPoint": 157,
									"id": 49,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_address_payable_fromMemory": {
									"entryPoint": 424,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_payable_fromMemory": {
									"entryPoint": 452,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_payablet_uint256_fromMemory": {
									"entryPoint": 479,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bytes_memory_ptr": {
									"entryPoint": 247,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"panic_error_0x41": {
									"entryPoint": 225,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:2265:1",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:1",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "46:95:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "63:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "70:3:1",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "75:10:1",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "66:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "66:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "56:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "56:31:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "56:31:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "103:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "106:4:1",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "96:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "96:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "96:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "127:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "130:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "120:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "120:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "120:15:1"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "14:127:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "225:842:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "271:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "280:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "283:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "273:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "273:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "273:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "246:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "255:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "242:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "242:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "267:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "238:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "238:32:1"
															},
															"nodeType": "YulIf",
															"src": "235:52:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "296:37:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "323:9:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "310:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:23:1"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "300:6:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "342:28:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "352:18:1",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "346:2:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "397:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "406:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "409:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "399:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "399:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "399:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "385:6:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "393:2:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "382:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "382:14:1"
															},
															"nodeType": "YulIf",
															"src": "379:34:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "422:32:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "436:9:1"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "447:6:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "432:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "432:22:1"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "426:2:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "502:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "511:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "514:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "504:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "504:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "504:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_2",
																						"nodeType": "YulIdentifier",
																						"src": "481:2:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "485:4:1",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "477:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "477:13:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "492:7:1"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "473:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "473:27:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "466:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "466:35:1"
															},
															"nodeType": "YulIf",
															"src": "463:55:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "527:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "550:2:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "537:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "537:16:1"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "531:2:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "576:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "578:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "578:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "578:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "568:2:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "572:2:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "565:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "565:10:1"
															},
															"nodeType": "YulIf",
															"src": "562:36:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "607:17:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "621:2:1",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nodeType": "YulIdentifier",
																	"src": "617:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "617:7:1"
															},
															"variables": [
																{
																	"name": "_4",
																	"nodeType": "YulTypedName",
																	"src": "611:2:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "633:23:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "653:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "647:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "647:9:1"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nodeType": "YulTypedName",
																	"src": "637:6:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "665:71:1",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "687:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"name": "_3",
																										"nodeType": "YulIdentifier",
																										"src": "711:2:1"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "715:4:1",
																										"type": "",
																										"value": "0x1f"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "707:3:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "707:13:1"
																							},
																							{
																								"name": "_4",
																								"nodeType": "YulIdentifier",
																								"src": "722:2:1"
																							}
																						],
																						"functionName": {
																							"name": "and",
																							"nodeType": "YulIdentifier",
																							"src": "703:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "703:22:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "727:2:1",
																						"type": "",
																						"value": "63"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "699:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "699:31:1"
																			},
																			{
																				"name": "_4",
																				"nodeType": "YulIdentifier",
																				"src": "732:2:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "695:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "695:40:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "683:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "683:53:1"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "669:10:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "795:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "797:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "797:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "797:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "754:10:1"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "766:2:1"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "751:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "751:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "774:10:1"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "786:6:1"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "771:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "771:22:1"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "748:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "748:46:1"
															},
															"nodeType": "YulIf",
															"src": "745:72:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "833:2:1",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "837:10:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "826:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "826:22:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "826:22:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "864:6:1"
																	},
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "872:2:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "857:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "857:18:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "857:18:1"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "921:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "930:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "933:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "923:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "923:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "923:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_2",
																						"nodeType": "YulIdentifier",
																						"src": "898:2:1"
																					},
																					{
																						"name": "_3",
																						"nodeType": "YulIdentifier",
																						"src": "902:2:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "894:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "894:11:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "907:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "890:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "890:20:1"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "912:7:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "887:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "887:33:1"
															},
															"nodeType": "YulIf",
															"src": "884:53:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "963:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "971:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "959:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "959:15:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "980:2:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "984:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "976:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "976:11:1"
																	},
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "989:2:1"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "946:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "946:46:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "946:46:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "memPtr",
																						"nodeType": "YulIdentifier",
																						"src": "1016:6:1"
																					},
																					{
																						"name": "_3",
																						"nodeType": "YulIdentifier",
																						"src": "1024:2:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1012:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1012:15:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1029:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1008:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1008:24:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1034:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1001:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1001:35:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1001:35:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1045:16:1",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "1055:6:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1045:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "191:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "202:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "214:6:1",
														"type": ""
													}
												],
												"src": "146:921:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1173:102:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1183:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1195:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1206:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1191:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1191:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1183:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1225:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "1240:6:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1256:3:1",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1261:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "1252:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1252:11:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1265:1:1",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "1248:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1248:19:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1236:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1236:32:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1218:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1218:51:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1218:51:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1142:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1153:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1164:4:1",
														"type": ""
													}
												],
												"src": "1072:203:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1409:145:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1419:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1431:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1442:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1427:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1427:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1419:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1461:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "1476:6:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1492:3:1",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1497:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "1488:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1488:11:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1501:1:1",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "1484:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1484:19:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1472:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1472:32:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1454:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1454:51:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1454:51:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1525:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1536:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1521:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1521:18:1"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "1541:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1514:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1514:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1514:34:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1370:9:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1381:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1389:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1400:4:1",
														"type": ""
													}
												],
												"src": "1280:274:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1627:117:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1637:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1652:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1646:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1646:13:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1637:5:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1722:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1731:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1734:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1724:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1724:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1724:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1681:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1692:5:1"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "1707:3:1",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "1712:1:1",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "1703:3:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "1703:11:1"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1716:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "1699:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1699:19:1"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "1688:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1688:31:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1678:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1678:42:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1671:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1671:50:1"
															},
															"nodeType": "YulIf",
															"src": "1668:70:1"
														}
													]
												},
												"name": "abi_decode_address_payable_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1606:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1617:5:1",
														"type": ""
													}
												],
												"src": "1559:185:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1838:135:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1884:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1893:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1896:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1886:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1886:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1886:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1859:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1868:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1855:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1855:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1880:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1851:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1851:32:1"
															},
															"nodeType": "YulIf",
															"src": "1848:52:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1909:58:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1957:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address_payable_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "1919:37:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1919:48:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1909:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_payable_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1804:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1815:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1827:6:1",
														"type": ""
													}
												],
												"src": "1749:224:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2084:179:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2130:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2139:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2142:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2132:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2132:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2132:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2105:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2114:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2101:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2101:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2126:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2097:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2097:32:1"
															},
															"nodeType": "YulIf",
															"src": "2094:52:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2155:58:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2203:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address_payable_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "2165:37:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2165:48:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2155:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2222:35:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2242:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2253:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2238:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2238:18:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "2232:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2232:25:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "2222:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_payablet_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2042:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2053:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2065:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2073:6:1",
														"type": ""
													}
												],
												"src": "1978:285:1"
											}
										]
									},
									"contents": "{\n    { }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_tuple_t_bytes_memory_ptr(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(0, 0) }\n        let _3 := calldataload(_2)\n        if gt(_3, _1) { panic_error_0x41() }\n        let _4 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_3, 0x1f), _4), 63), _4))\n        if or(gt(newFreePtr, _1), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _3)\n        if gt(add(add(_2, _3), 32), dataEnd) { revert(0, 0) }\n        calldatacopy(add(memPtr, 32), add(_2, 32), _3)\n        mstore(add(add(memPtr, _3), 32), 0)\n        value0 := memPtr\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_decode_address_payable_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address_payable_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address_payable_fromMemory(headStart)\n    }\n    function abi_decode_tuple_t_address_payablet_uint256_fromMemory(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address_payable_fromMemory(headStart)\n        value1 := mload(add(headStart, 32))\n    }\n}",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100365760003560e01c80631f2aaa341461003b578063a325bfb61461006b575b600080fd5b61004e6100493660046100f7565b61009d565b6040516001600160a01b0390911681526020015b60405180910390f35b61007e6100793660046100f7565b6100bb565b604080516001600160a01b039093168352602083019190915201610062565b600080828060200190518101906100b491906101c4565b9392505050565b600080600080848060200190518101906100d591906101df565b90969095509350505050565b634e487b7160e01b600052604160045260246000fd5b60006020828403121561010957600080fd5b813567ffffffffffffffff8082111561012157600080fd5b818401915084601f83011261013557600080fd5b813581811115610147576101476100e1565b604051601f8201601f19908116603f0116810190838211818310171561016f5761016f6100e1565b8160405282815287602084870101111561018857600080fd5b826020860160208301376000928101602001929092525095945050505050565b80516001600160a01b03811681146101bf57600080fd5b919050565b6000602082840312156101d657600080fd5b6100b4826101a8565b600080604083850312156101f257600080fd5b6101fb836101a8565b915060208301519050925092905056fea2646970667358221220be59c589c00d14611ad4a26696fe27d9b79e2f5d1ea8b8fd0ae1e746c04f0dd964736f6c634300080e0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x36 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x1F2AAA34 EQ PUSH2 0x3B JUMPI DUP1 PUSH4 0xA325BFB6 EQ PUSH2 0x6B JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4E PUSH2 0x49 CALLDATASIZE PUSH1 0x4 PUSH2 0xF7 JUMP JUMPDEST PUSH2 0x9D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x7E PUSH2 0x79 CALLDATASIZE PUSH1 0x4 PUSH2 0xF7 JUMP JUMPDEST PUSH2 0xBB JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP4 AND DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE ADD PUSH2 0x62 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0xB4 SWAP2 SWAP1 PUSH2 0x1C4 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 DUP5 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0xD5 SWAP2 SWAP1 PUSH2 0x1DF JUMP JUMPDEST SWAP1 SWAP7 SWAP1 SWAP6 POP SWAP4 POP POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x109 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x121 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP5 ADD SWAP2 POP DUP5 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x135 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x147 JUMPI PUSH2 0x147 PUSH2 0xE1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP4 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x16F JUMPI PUSH2 0x16F PUSH2 0xE1 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP8 PUSH1 0x20 DUP5 DUP8 ADD ADD GT ISZERO PUSH2 0x188 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 SWAP3 DUP2 ADD PUSH1 0x20 ADD SWAP3 SWAP1 SWAP3 MSTORE POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1BF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1D6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB4 DUP3 PUSH2 0x1A8 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1F2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1FB DUP4 PUSH2 0x1A8 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD MLOAD SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBE MSIZE 0xC5 DUP10 0xC0 0xD EQ PUSH2 0x1AD4 LOG2 PUSH7 0x96FE27D9B79E2F 0x5D 0x1E 0xA8 0xB8 REVERT EXP 0xE1 0xE7 CHAINID 0xC0 0x4F 0xD 0xD9 PUSH5 0x736F6C6343 STOP ADDMOD 0xE STOP CALLER ",
							"sourceMap": "57:382:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;277:159;;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;1236:32:1;;;1218:51;;1206:2;1191:18;277:159:0;;;;;;;;84:189;;;;;;:::i;:::-;;:::i;:::-;;;;-1:-1:-1;;;;;1472:32:1;;;1454:51;;1536:2;1521:18;;1514:34;;;;1427:18;84:189:0;1280:274:1;277:159:0;347:7;363:16;394:4;383:27;;;;;;;;;;;;:::i;:::-;362:48;277:159;-1:-1:-1;;;277:159:0:o;84:189::-;150:7;159;174:13;189:12;216:4;205:33;;;;;;;;;;;;:::i;:::-;173:65;;;;-1:-1:-1;84:189:0;-1:-1:-1;;;;84:189:0:o;14:127:1:-;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:921;214:6;267:2;255:9;246:7;242:23;238:32;235:52;;;283:1;280;273:12;235:52;323:9;310:23;352:18;393:2;385:6;382:14;379:34;;;409:1;406;399:12;379:34;447:6;436:9;432:22;422:32;;492:7;485:4;481:2;477:13;473:27;463:55;;514:1;511;504:12;463:55;550:2;537:16;572:2;568;565:10;562:36;;;578:18;;:::i;:::-;653:2;647:9;621:2;707:13;;-1:-1:-1;;703:22:1;;;727:2;699:31;695:40;683:53;;;751:18;;;771:22;;;748:46;745:72;;;797:18;;:::i;:::-;837:10;833:2;826:22;872:2;864:6;857:18;912:7;907:2;902;898;894:11;890:20;887:33;884:53;;;933:1;930;923:12;884:53;989:2;984;980;976:11;971:2;963:6;959:15;946:46;1034:1;1012:15;;;1029:2;1008:24;1001:35;;;;-1:-1:-1;1016:6:1;146:921;-1:-1:-1;;;;;146:921:1:o;1559:185::-;1646:13;;-1:-1:-1;;;;;1688:31:1;;1678:42;;1668:70;;1734:1;1731;1724:12;1668:70;1559:185;;;:::o;1749:224::-;1827:6;1880:2;1868:9;1859:7;1855:23;1851:32;1848:52;;;1896:1;1893;1886:12;1848:52;1919:48;1957:9;1919:48;:::i;1978:285::-;2065:6;2073;2126:2;2114:9;2105:7;2101:23;2097:32;2094:52;;;2142:1;2139;2132:12;2094:52;2165:48;2203:9;2165:48;:::i;:::-;2155:58;;2253:2;2242:9;2238:18;2232:25;2222:35;;1978:285;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "115400",
								"executionCost": "165",
								"totalCost": "115565"
							},
							"external": {
								"checkEncodeMakerAsset(bytes)": "infinite",
								"checkEncodeTakerAsset(bytes)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 57,
									"end": 439,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 57,
									"end": 439,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 57,
									"end": 439,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 57,
									"end": 439,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 57,
									"end": 439,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 57,
									"end": 439,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 57,
									"end": 439,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 57,
									"end": 439,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 57,
									"end": 439,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 57,
									"end": 439,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 57,
									"end": 439,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 57,
									"end": 439,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 57,
									"end": 439,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 57,
									"end": 439,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 57,
									"end": 439,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 57,
									"end": 439,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 57,
									"end": 439,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 57,
									"end": 439,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 57,
									"end": 439,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 57,
									"end": 439,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 57,
									"end": 439,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220be59c589c00d14611ad4a26696fe27d9b79e2f5d1ea8b8fd0ae1e746c04f0dd964736f6c634300080e0033",
									".code": [
										{
											"begin": 57,
											"end": 439,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 57,
											"end": 439,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 57,
											"end": 439,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 57,
											"end": 439,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 57,
											"end": 439,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57,
											"end": 439,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 57,
											"end": 439,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 57,
											"end": 439,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 57,
											"end": 439,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 57,
											"end": 439,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57,
											"end": 439,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 57,
											"end": 439,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 57,
											"end": 439,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 57,
											"end": 439,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 57,
											"end": 439,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 57,
											"end": 439,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 57,
											"end": 439,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 57,
											"end": 439,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 57,
											"end": 439,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 57,
											"end": 439,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 57,
											"end": 439,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 57,
											"end": 439,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 57,
											"end": 439,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 57,
											"end": 439,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57,
											"end": 439,
											"name": "PUSH",
											"source": 0,
											"value": "1F2AAA34"
										},
										{
											"begin": 57,
											"end": 439,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 57,
											"end": 439,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 57,
											"end": 439,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 57,
											"end": 439,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57,
											"end": 439,
											"name": "PUSH",
											"source": 0,
											"value": "A325BFB6"
										},
										{
											"begin": 57,
											"end": 439,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 57,
											"end": 439,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 57,
											"end": 439,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 57,
											"end": 439,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 57,
											"end": 439,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 57,
											"end": 439,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 57,
											"end": 439,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57,
											"end": 439,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 277,
											"end": 436,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 277,
											"end": 436,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 277,
											"end": 436,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 277,
											"end": 436,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 277,
											"end": 436,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 277,
											"end": 436,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 277,
											"end": 436,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 277,
											"end": 436,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 277,
											"end": 436,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 277,
											"end": 436,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 277,
											"end": 436,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 277,
											"end": 436,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 277,
											"end": 436,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 277,
											"end": 436,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 277,
											"end": 436,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 277,
											"end": 436,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1236,
											"end": 1268,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1236,
											"end": 1268,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1236,
											"end": 1268,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1218,
											"end": 1269,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1218,
											"end": 1269,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1206,
											"end": 1208,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1191,
											"end": 1209,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 277,
											"end": 436,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 277,
											"end": 436,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 277,
											"end": 436,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 277,
											"end": 436,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 277,
											"end": 436,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 277,
											"end": 436,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 277,
											"end": 436,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 277,
											"end": 436,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 277,
											"end": 436,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 84,
											"end": 273,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 84,
											"end": 273,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 84,
											"end": 273,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 84,
											"end": 273,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 84,
											"end": 273,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 84,
											"end": 273,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 84,
											"end": 273,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 84,
											"end": 273,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 84,
											"end": 273,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 84,
											"end": 273,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 84,
											"end": 273,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 84,
											"end": 273,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 84,
											"end": 273,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 84,
											"end": 273,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 84,
											"end": 273,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 84,
											"end": 273,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 84,
											"end": 273,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1472,
											"end": 1504,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1472,
											"end": 1504,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 1472,
											"end": 1504,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1454,
											"end": 1505,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1454,
											"end": 1505,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1536,
											"end": 1538,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1521,
											"end": 1539,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1521,
											"end": 1539,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1514,
											"end": 1548,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1514,
											"end": 1548,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1514,
											"end": 1548,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1514,
											"end": 1548,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1427,
											"end": 1445,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 84,
											"end": 273,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 1280,
											"end": 1554,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 277,
											"end": 436,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 277,
											"end": 436,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 347,
											"end": 354,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 363,
											"end": 379,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 394,
											"end": 398,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 383,
											"end": 410,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 383,
											"end": 410,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 383,
											"end": 410,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 383,
											"end": 410,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 383,
											"end": 410,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 383,
											"end": 410,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 383,
											"end": 410,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 383,
											"end": 410,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 383,
											"end": 410,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 383,
											"end": 410,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 383,
											"end": 410,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 383,
											"end": 410,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 383,
											"end": 410,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 383,
											"end": 410,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 383,
											"end": 410,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 362,
											"end": 410,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 277,
											"end": 436,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 277,
											"end": 436,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 84,
											"end": 273,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 84,
											"end": 273,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 150,
											"end": 157,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 159,
											"end": 166,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 174,
											"end": 187,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 189,
											"end": 201,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 216,
											"end": 220,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 205,
											"end": 238,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 205,
											"end": 238,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 205,
											"end": 238,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 205,
											"end": 238,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 205,
											"end": 238,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 205,
											"end": 238,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 205,
											"end": 238,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 205,
											"end": 238,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 205,
											"end": 238,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 205,
											"end": 238,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 205,
											"end": 238,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 205,
											"end": 238,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 205,
											"end": 238,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 205,
											"end": 238,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 205,
											"end": 238,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 173,
											"end": 238,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 173,
											"end": 238,
											"name": "SWAP7",
											"source": 0
										},
										{
											"begin": 173,
											"end": 238,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 173,
											"end": 238,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 84,
											"end": 273,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 84,
											"end": 273,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14,
											"end": 141,
											"name": "tag",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 14,
											"end": 141,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 75,
											"end": 85,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B71"
										},
										{
											"begin": 70,
											"end": 73,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 66,
											"end": 86,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 63,
											"end": 64,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 56,
											"end": 87,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 106,
											"end": 110,
											"name": "PUSH",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 103,
											"end": 104,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 96,
											"end": 111,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 130,
											"end": 134,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 127,
											"end": 128,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 120,
											"end": 135,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 146,
											"end": 1067,
											"name": "tag",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 146,
											"end": 1067,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 214,
											"end": 220,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 267,
											"end": 269,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 255,
											"end": 264,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 246,
											"end": 253,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 242,
											"end": 265,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 238,
											"end": 270,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 235,
											"end": 287,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 235,
											"end": 287,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 235,
											"end": 287,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 283,
											"end": 284,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 280,
											"end": 281,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 273,
											"end": 285,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 235,
											"end": 287,
											"name": "tag",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 235,
											"end": 287,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 323,
											"end": 332,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 310,
											"end": 333,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 352,
											"end": 370,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 393,
											"end": 395,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 385,
											"end": 391,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 382,
											"end": 396,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 379,
											"end": 413,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 379,
											"end": 413,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 379,
											"end": 413,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 409,
											"end": 410,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 406,
											"end": 407,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 399,
											"end": 411,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 379,
											"end": 413,
											"name": "tag",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 379,
											"end": 413,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 447,
											"end": 453,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 436,
											"end": 445,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 432,
											"end": 454,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 422,
											"end": 454,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 422,
											"end": 454,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 492,
											"end": 499,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 485,
											"end": 489,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 481,
											"end": 483,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 477,
											"end": 490,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 473,
											"end": 500,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 463,
											"end": 518,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 463,
											"end": 518,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 514,
											"end": 515,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 511,
											"end": 512,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 504,
											"end": 516,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 463,
											"end": 518,
											"name": "tag",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 463,
											"end": 518,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 550,
											"end": 552,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 537,
											"end": 553,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 572,
											"end": 574,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 568,
											"end": 570,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 565,
											"end": 575,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 562,
											"end": 598,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 562,
											"end": 598,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 562,
											"end": 598,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 578,
											"end": 596,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 578,
											"end": 596,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 578,
											"end": 596,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 578,
											"end": 596,
											"name": "tag",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 578,
											"end": 596,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 653,
											"end": 655,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 647,
											"end": 656,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 621,
											"end": 623,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 707,
											"end": 720,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 707,
											"end": 720,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 703,
											"end": 725,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 703,
											"end": 725,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 703,
											"end": 725,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 727,
											"end": 729,
											"name": "PUSH",
											"source": 1,
											"value": "3F"
										},
										{
											"begin": 699,
											"end": 730,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 695,
											"end": 735,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 683,
											"end": 736,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 683,
											"end": 736,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 683,
											"end": 736,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 751,
											"end": 769,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 751,
											"end": 769,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 751,
											"end": 769,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 771,
											"end": 793,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 771,
											"end": 793,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 771,
											"end": 793,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 748,
											"end": 794,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 745,
											"end": 817,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 745,
											"end": 817,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 745,
											"end": 817,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 797,
											"end": 815,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 797,
											"end": 815,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 797,
											"end": 815,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 797,
											"end": 815,
											"name": "tag",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 797,
											"end": 815,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 837,
											"end": 847,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 833,
											"end": 835,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 826,
											"end": 848,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 872,
											"end": 874,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 864,
											"end": 870,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 857,
											"end": 875,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 912,
											"end": 919,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 907,
											"end": 909,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 902,
											"end": 904,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 898,
											"end": 900,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 894,
											"end": 905,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 890,
											"end": 910,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 887,
											"end": 920,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 884,
											"end": 937,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 884,
											"end": 937,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 884,
											"end": 937,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 933,
											"end": 934,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 930,
											"end": 931,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 923,
											"end": 935,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 884,
											"end": 937,
											"name": "tag",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 884,
											"end": 937,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 989,
											"end": 991,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 984,
											"end": 986,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 980,
											"end": 982,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 976,
											"end": 987,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 971,
											"end": 973,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 963,
											"end": 969,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 959,
											"end": 974,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 946,
											"end": 992,
											"name": "CALLDATACOPY",
											"source": 1
										},
										{
											"begin": 1034,
											"end": 1035,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1012,
											"end": 1027,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1012,
											"end": 1027,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1012,
											"end": 1027,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1029,
											"end": 1031,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1008,
											"end": 1032,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1001,
											"end": 1036,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1001,
											"end": 1036,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1001,
											"end": 1036,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1001,
											"end": 1036,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1016,
											"end": 1022,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 146,
											"end": 1067,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 146,
											"end": 1067,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1559,
											"end": 1744,
											"name": "tag",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 1559,
											"end": 1744,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1646,
											"end": 1659,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1646,
											"end": 1659,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1688,
											"end": 1719,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1688,
											"end": 1719,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1678,
											"end": 1720,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1678,
											"end": 1720,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1668,
											"end": 1738,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 1668,
											"end": 1738,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1734,
											"end": 1735,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1731,
											"end": 1732,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1724,
											"end": 1736,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1668,
											"end": 1738,
											"name": "tag",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 1668,
											"end": 1738,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1559,
											"end": 1744,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1559,
											"end": 1744,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1559,
											"end": 1744,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1559,
											"end": 1744,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1749,
											"end": 1973,
											"name": "tag",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 1749,
											"end": 1973,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1827,
											"end": 1833,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1880,
											"end": 1882,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1868,
											"end": 1877,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1859,
											"end": 1866,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1851,
											"end": 1883,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 1848,
											"end": 1900,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1848,
											"end": 1900,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1848,
											"end": 1900,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1896,
											"end": 1897,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1893,
											"end": 1894,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1886,
											"end": 1898,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1848,
											"end": 1900,
											"name": "tag",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1848,
											"end": 1900,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1919,
											"end": 1967,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 1957,
											"end": 1966,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1919,
											"end": 1967,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 1919,
											"end": 1967,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1978,
											"end": 2263,
											"name": "tag",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 1978,
											"end": 2263,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2065,
											"end": 2071,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2073,
											"end": 2079,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2126,
											"end": 2128,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2114,
											"end": 2123,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2105,
											"end": 2112,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2101,
											"end": 2124,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2097,
											"end": 2129,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 2094,
											"end": 2146,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2094,
											"end": 2146,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 2094,
											"end": 2146,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2142,
											"end": 2143,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2139,
											"end": 2140,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2132,
											"end": 2144,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2094,
											"end": 2146,
											"name": "tag",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 2094,
											"end": 2146,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2165,
											"end": 2213,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 2203,
											"end": 2212,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2165,
											"end": 2213,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 2165,
											"end": 2213,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2165,
											"end": 2213,
											"name": "tag",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 2165,
											"end": 2213,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2155,
											"end": 2213,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2155,
											"end": 2213,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2253,
											"end": 2255,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2242,
											"end": 2251,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2238,
											"end": 2256,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2232,
											"end": 2257,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2222,
											"end": 2257,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2222,
											"end": 2257,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1978,
											"end": 2263,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1978,
											"end": 2263,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1978,
											"end": 2263,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1978,
											"end": 2263,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1978,
											"end": 2263,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1978,
											"end": 2263,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										}
									]
								}
							},
							"sourceList": [
								"contracts/CheckEncode.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"checkEncodeMakerAsset(bytes)": "a325bfb6",
							"checkEncodeTakerAsset(bytes)": "1f2aaa34"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.14+commit.80d49f37\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"checkEncodeMakerAsset\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"checkEncodeTakerAsset\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/CheckEncode.sol\":\"CheckEncode\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/CheckEncode.sol\":{\"keccak256\":\"0x068efdca77e7a5c7748dc94db1ba666fa3f2328d83647008f3ba65e9f75b5636\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d456136337cd90079d0b9291529de368cd03d12b5cb56018bcb8ee2a2fab5ec3\",\"dweb:/ipfs/QmZxFPm3DAyeNnK5A8ccHp8awcsMQ6RALZJRfYj1wuHGEM\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "2018",
				"formattedMessage": "Warning: Function state mutability can be restricted to pure\n --> contracts/CheckEncode.sol:7:3:\n  |\n7 |   function checkEncodeMakerAsset(bytes memory data) public returns (address, uint256){\n  |   ^ (Relevant source part starts here and spans across multiple lines).\n\n",
				"message": "Function state mutability can be restricted to pure",
				"severity": "warning",
				"sourceLocation": {
					"end": 273,
					"file": "contracts/CheckEncode.sol",
					"start": 84
				},
				"type": "Warning"
			}
		],
		"sources": {
			"contracts/CheckEncode.sol": {
				"ast": {
					"absolutePath": "contracts/CheckEncode.sol",
					"exportedSymbols": {
						"CheckEncode": [
							50
						]
					},
					"id": 51,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "CheckEncode",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 50,
							"linearizedBaseContracts": [
								50
							],
							"name": "CheckEncode",
							"nameLocation": "66:11:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 28,
										"nodeType": "Block",
										"src": "167:106:0",
										"statements": [
											{
												"assignments": [
													11,
													13
												],
												"declarations": [
													{
														"constant": false,
														"id": 11,
														"mutability": "mutable",
														"name": "token",
														"nameLocation": "182:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 28,
														"src": "174:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 10,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "174:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 13,
														"mutability": "mutable",
														"name": "tokenId",
														"nameLocation": "194:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 28,
														"src": "189:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 12,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "189:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 23,
												"initialValue": {
													"arguments": [
														{
															"id": 16,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3,
															"src": "216:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"components": [
																{
																	"id": 18,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "223:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 17,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "223:7:0",
																		"typeDescriptions": {}
																	}
																},
																{
																	"id": 20,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "232:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 19,
																		"name": "uint",
																		"nodeType": "ElementaryTypeName",
																		"src": "232:4:0",
																		"typeDescriptions": {}
																	}
																}
															],
															"id": 21,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "222:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_type$_t_address_$_$_t_type$_t_uint256_$_$",
																"typeString": "tuple(type(address),type(uint256))"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_tuple$_t_type$_t_address_$_$_t_type$_t_uint256_$_$",
																"typeString": "tuple(type(address),type(uint256))"
															}
														],
														"expression": {
															"id": 14,
															"name": "abi",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967295,
															"src": "205:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_abi",
																"typeString": "abi"
															}
														},
														"id": 15,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberName": "decode",
														"nodeType": "MemberAccess",
														"src": "205:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
															"typeString": "function () pure"
														}
													},
													"id": 22,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "205:33:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_address_payable_$_t_uint256_$",
														"typeString": "tuple(address payable,uint256)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "173:65:0"
											},
											{
												"expression": {
													"components": [
														{
															"id": 24,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 11,
															"src": "253:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 25,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 13,
															"src": "260:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 26,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "252:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
														"typeString": "tuple(address,uint256)"
													}
												},
												"functionReturnParameters": 9,
												"id": 27,
												"nodeType": "Return",
												"src": "245:23:0"
											}
										]
									},
									"functionSelector": "a325bfb6",
									"id": 29,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "checkEncodeMakerAsset",
									"nameLocation": "93:21:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "128:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 29,
												"src": "115:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "115:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "114:19:0"
									},
									"returnParameters": {
										"id": 9,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 6,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 29,
												"src": "150:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 5,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "150:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 8,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 29,
												"src": "159:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 7,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "159:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "149:18:0"
									},
									"scope": 50,
									"src": "84:189:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 48,
										"nodeType": "Block",
										"src": "356:80:0",
										"statements": [
											{
												"assignments": [
													37
												],
												"declarations": [
													{
														"constant": false,
														"id": 37,
														"mutability": "mutable",
														"name": "buyToken",
														"nameLocation": "371:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 48,
														"src": "363:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 36,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "363:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 45,
												"initialValue": {
													"arguments": [
														{
															"id": 40,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 31,
															"src": "394:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"components": [
																{
																	"id": 42,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "401:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 41,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "401:7:0",
																		"typeDescriptions": {}
																	}
																}
															],
															"id": 43,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "400:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															}
														],
														"expression": {
															"id": 38,
															"name": "abi",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967295,
															"src": "383:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_abi",
																"typeString": "abi"
															}
														},
														"id": 39,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberName": "decode",
														"nodeType": "MemberAccess",
														"src": "383:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
															"typeString": "function () pure"
														}
													},
													"id": 44,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "383:27:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "362:48:0"
											},
											{
												"expression": {
													"id": 46,
													"name": "buyToken",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 37,
													"src": "423:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 35,
												"id": 47,
												"nodeType": "Return",
												"src": "416:15:0"
											}
										]
									},
									"functionSelector": "1f2aaa34",
									"id": 49,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "checkEncodeTakerAsset",
									"nameLocation": "286:21:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 32,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 31,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "321:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 49,
												"src": "308:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 30,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "308:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "307:19:0"
									},
									"returnParameters": {
										"id": 35,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 34,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 49,
												"src": "347:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 33,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "347:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "346:9:0"
									},
									"scope": 50,
									"src": "277:159:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 51,
							"src": "57:382:0",
							"usedErrors": []
						}
					],
					"src": "32:408:0"
				},
				"id": 0
			}
		}
	}
}